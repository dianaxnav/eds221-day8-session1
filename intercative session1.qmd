---
title: "dataviz"
format: html
editor: visual
execute: 
  warning: TRUE
---

## Review basics of ggplot

```{r}
library(tidyverse)
library(janitor)
library(here)

library(patchwork)
library(ggrepel)
library(gghighlight)
library(paletteer)
```

## Read in data

```{r}
lizards <- read_csv(here::here("data_tidy", "lizards.csv"))
```

Do some data wrangling to create a new subset from lizards where you:

1.  limit the data to only contain western whiptails, Colorado checkered, and eastern fence lizards
2.  add a new column with total length converted to cm
3.  group by species and site
4.  return a summary table with mean total length and standard deviation of total length by species and site

```{r}
western_col <- lizards %>% 
  filter(common_name %in% c("western whiptail", "colorado checkered", "eastern fence")) %>% 
  mutate(total_size_cm = total_length / 10) %>% 
  group_by(common_name, site) %>% 
  summarize(mean_length = mean(total_size_cm, na.rm = TRUE), (sd_length = sd(total_size_cm, na.rm = TRUE)))
```

```{r}
ggplot(data = lizards, aes(x = total_length, y = weight)) +
  geom_point(aes(color = common_name)) +
  scale_y_continuous(limits = c(0, 100),
                     breaks = seq(from = 0, to = 100, by = 20),
                     expand = c(0,0))
  #facet_wrap(~ common_name, scales = "free")
```

```{r}
lizard_counts <- lizards %>% 
  dplyr::count(common_name)

#SAME 

lizards %>% 
  group_by(common_name) %>% 
  summarize(count = n())
#Use dplyr::count to find the total number of lizards by common name in the lizards data set
```

```{r}
#Fct_reorder organizes the plot by n(count) in this situation
ggplot(lizard_counts, aes(y = fct_reorder(common_name, n), x = n)) + 
  geom_col() +
  scale()
```
